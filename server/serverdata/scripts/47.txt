// Boss script.
// I'm just gonna let this code flow alright?
// Bit agravated right now.
#include "summoning.h"
#include "dir.h"
const int BEAM_DAMAGE  = 50;
const int SHOCK_DAMAGE = 100;
const int NPC_DAMAGE   = 50;
const int NORMAL_MODE  = 0;
const int NPC_MODE     = 1;
const int BEAM_MODE    = 2;
const int SHOCK_MODE   = 3;

const pos HEAL_POS(10,7,1404);

void beam(int mapid, int x, int y, int dir,int len = 10,bool complete = false)
{
   while(inBounds(x,y) && getTileType(mapid,x,y) == TILE_TYPE_NONE && len > 0)
   {
      dirapply(x,y,dir);
      if(inBounds(x,y) && getTileType(mapid,x,y) == TILE_TYPE_NONE)
      {
         int victim = getID(mapid,x,y);
         if(victim != -1)
         {
            cPlayer *target = playerStruct(victim);
            if(target->type == PLAYER_TYPE_NPC)
            {
               if(!complete)
               {
                  beam(mapid,target->x,target->y,DIR_UP,5,true);
                  beam(mapid,target->x,target->y,DIR_LEFT,5,true);
                  beam(mapid,target->x,target->y,DIR_RIGHT,5,true);
                  beam(mapid,target->x,target->y,DIR_DOWN,5,true);
                  setHP(victim,0);
               }
            }
            else if(complete)
            {
               setHP(victim,target->hp - BEAM_DAMAGE);
            }
         }
         if(!complete)
         {
            //makeEffect(mapid,x,y,2);
         }
         else
         {
            makeEffect(mapid,x,y,3);
         }
      }
      len--;
   }
}

void shootNPC(int mapid, int x, int y, int dir, int len = 5)
{
   cMap *map = mapStruct(mapid);
   dirapply(x,y,dir);
   while(inBounds(x,y) && map->map[y][x].type == TILE_TYPE_NONE && len >= 0)
   {
      makeEffect(mapid,x,y,16);
      int victim = getID(mapid,x,y);
      if(victim != -1)
      {
         cPlayer *target = playerStruct(victim);
         makeEffect(mapid,x,y,9);
         setHP(victim,target->hp - NPC_DAMAGE);
      }
      dirapply(x,y,dir);
      len--;
   }
   if(getID(mapid,x,y) == -1)
   {
      makeNPC(274,mapid,x,y);
      int id = -1;
      for(id = playerLen() - 1; id >= 0;id--)
      {
         cPlayer* player = playerStruct(id);
         if(player->map == mapid && player->x == x && player->y == y)
         {
            break;
         }
      }

      if(id > -1)
      {
         cPlayer *player = playerStruct(id);
         if(player->type == PLAYER_TYPE_NPC)
         {
            player->dir = opposite(dir);
         }
      }
   }
}

void spawnNPCS(int id)
{
   cPlayer *player = playerStruct(id);
   shootNPC(player->map,player->x,player->y,DIR_UP);
   shootNPC(player->map,player->x,player->y,DIR_DOWN);
   shootNPC(player->map,player->x,player->y,DIR_LEFT);
   shootNPC(player->map,player->x,player->y,DIR_RIGHT);
}

int selectTarget(int id)
{
   cPlayer* player = playerStruct(id);
   int mapid = player->map;
   int victim = -1;
   int closest= -1;
   for(int i = 0; i < mapListLen(mapid); i++)
   {
      victim = mapList(mapid,i);
      if(closest == -1 || distance(id,victim) < distance(id,closest))
      {
         cPlayer *player = playerStruct(victim);
         if(player->type == PLAYER_TYPE_PC && player->access == 1)
         {
            closest = victim;
         }
      }
   }
   return closest;
}
int main()
{
   int id = getPlayer();
   cPlayer* player = playerStruct(id);
   cMap*    map    = mapStruct(player->map);
   char toggle[64];
   sprintf(toggle,"toggle%d%d",myScript(),id);
   
   if(player->unknown < 0 || player->unknown > 3)
   {
      player->unknown = NORMAL_MODE;
      player->flags   = 0;
   }
   if(player->unknown != SHOCK_MODE)
   {
      if(!isGlobal(toggle))
      {
         runScript(myScript(), 350);
         setGlobalInt(toggle, 1);
      }
      else
      {
         freeGlobal(toggle);
      }
   }
   
   if(npc_find_player(id) != -1)
   {
      if(player->target == -1 || getMap(player->target) != player->map || getPlayerType(player->target) == PLAYER_TYPE_NPC)
      {
         player->target = selectTarget(id);
      }
   }
   else
   {
      player->target = -1;
   }
   
   if(player->target != -1)
   {
      if(player->hp < player->mhp/5)
      {
         if(player->map != HEAL_POS.map && player->x != HEAL_POS.x && player->y != HEAL_POS.y)
         {
            if(map->map[HEAL_POS.y][HEAL_POS.x].type == TILE_TYPE_NONE)
            {
               setPos(id,HEAL_POS.map,HEAL_POS.x,HEAL_POS.y);
            }
         }
         else
         {
            setHP(id,player->mhp);
         }
      }
      else
      {
         if(player->unknown == NORMAL_MODE)
         {
            if(!npc_attack(id,player->target))
            {
               npc_follow(id,player->target);
            }
            
            if(getRand(100) < 10)
            {
               makeEffect(player->map,player->x,player->y,10);
               player->flags = 2;
               player->unknown = NPC_MODE;
            }
            else if(getRand(100) < 5)
            {
               player->flags = 0;
               player->unknown = SHOCK_MODE;
            }
         }
         else if(player->unknown == NPC_MODE)
         {
            
            player->flags--;
            if(player->flags <= 0)
            {
               spawnNPCS(id);
               player->flags = getRand(3) + 3;
               player->unknown = BEAM_MODE;
            }
         }
         else if(player->unknown == BEAM_MODE)
         {
            player->flags --;
            if(player->flags == 0)
            {
               beam(player->map,player->x,player->y,DIR_UP);
               beam(player->map,player->x,player->y,DIR_LEFT);
               beam(player->map,player->x,player->y,DIR_RIGHT);
               beam(player->map,player->x,player->y,DIR_DOWN);
               player->unknown = NORMAL_MODE;
               chargeTo(id,player->target);
            }

         }
         else if(player->unknown == SHOCK_MODE)
         {
            for(int i = 0; i < 3; i++)
            {
               int x = player->x;
               int y = player->y;
               switch(player->flags)
               {
                  case 0:
                     x++;
                     break;
                  case 1:
                     y++;
                     break;
                  case 2:
                     x--;
                     break;
                  case 3:
                     y--;
                     break;
                  case 4:
                     x++;
                     y++;
                     break;
                  case 5:
                     x--;
                     y++;
                     break;
                  case 6:
                     x++;
                     y--;
                     break;
                  default:
                     x--;
                     y--;
                     break;
               }
               player->flags++;
               if(player->flags > 7)
               {
                  player->flags = 0;
               }
               if(inBounds(x,y))
               {
                  makeEffect(player->map,x,y,2);
                  int victim = getID(player->map,x,y);
                  if(victim > -1 && victim != id)
                  {
                     setHP(victim,getHP(victim) - SHOCK_DAMAGE);
                  }
               }
            }
            npc_follow(id,player->target);
            if(getRand(100) < 10)
            {
               player->unknown = NORMAL_MODE;
               chargeTo(id,player->target);
            }
         }
      }
   }
}
