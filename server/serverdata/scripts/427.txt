// Battlemage Fire

void main()
{
	int id  =getPlayer();
	int map =getMap(id);
	int x   =getX(id);
	int y   =getY(id);
	if(getMP(id)<15)
	{
		sendChat("^RNot enough mana.",id);
	}
	else
	{
		setMP(id,getMP(id)-15);
		switch(getDir(id))
		{
			case 0:
				if(inBounds(x-1,y+1) && getTileType(map,x-1,y+1) != 2)
				{
					if(getID(map,x-1,y+1)!=-1 && getID(map,x-1,y+1)!=id)
					{
						int victim=getID(map,x-1,y+1);
						setHP(victim,getHP(victim)-getRand(6)+3);
						makeEffect(map,x-1,y+1,10);
					}
					else
					makeEffect(map,x-1,y+1,14);
				}
				if(inBounds(x,y+1) && getTileType(map,x,y+1) != 2)
				{
					if(getID(map,x,y+1)!=-1 && getID(map,x,y+1)!=id)
					{
						int victim=getID(map,x,y+1);
						setHP(victim,getHP(victim)-magicDamage(id));
						makeEffect(map,x,y+1,10);
					}
					else
					makeEffect(map,x,y+1,14);
				}
				if(inBounds(x+1,y+1) && getTileType(map,x+1,y+1) != 2)
				{
					if(getID(map,x+1,y+1)!=-1 && getID(map,x+1,y+1)!=id)
					{
						int victim=getID(map,x+1,y+1);
						setHP(victim,getHP(victim)-magicDamage(id));
						makeEffect(map,x+1,y+1,10);
					}
					else
					makeEffect(map,x+1,y+1,14);
				}
				break;
			case 1:
				if(inBounds(x-1,y-1) && getTileType(map,x-1,y-1) != 2)
				{
					if(getID(map,x-1,y-1)!=-1 && getID(map,x-1,y-1)!=id)
					{
						int victim=getID(map,x-1,y-1);
						setHP(victim,getHP(victim)-magicDamage(id));
						makeEffect(map,x-1,y-1,10);
					}
					else
					makeEffect(map,x-1,y-1,14);
				}
				if(inBounds(x,y-1) && getTileType(map,x,y-1) != 2)
				{
					if(getID(map,x,y-1)!=-1 && getID(map,x,y-1)!=id)
					{
						int victim=getID(map,x,y-1);
						setHP(victim,getHP(victim)-magicDamage(id));
						makeEffect(map,x,y-1,10);
					}
					else
					makeEffect(map,x,y-1,14);
				}
				if(inBounds(x+1,y-1) && getTileType(map,x+1,y-1) != 2)
				{
					if(getID(map,x+1,y-1)!=-1 && getID(map,x+1,y-1)!=id)
					{
						int victim=getID(map,x+1,y-1);
						setHP(victim,getHP(victim)-magicDamage(id));
						makeEffect(map,x+1,y-1,10);
					}
					else
					makeEffect(map,x+1,y-1,14);
				}
				break;
			case 2:
				if(inBounds(x-1,y-1) && getTileType(map,x-1,y-1) != 2)
				{
					if(getID(map,x-1,y-1)!=-1 && getID(map,x-1,y-1)!=id)
					{
						int victim=getID(map,x-1,y-1);
						setHP(victim,getHP(victim)-magicDamage(id));
						makeEffect(map,x-1,y-1,10);
					}
					else
					makeEffect(map,x-1,y-1,14);
				}
				if(inBounds(x-1,y) && getTileType(map,x-1,y) != 2)
				{
					if(getID(map,x-1,y)!=-1 && getID(map,x-1,y)!=id)
					{
						int victim=getID(map,x-1,y);
						setHP(victim,getHP(victim)-magicDamage(id));
						makeEffect(map,x-1,y,10);
					}
					else
					makeEffect(map,x-1,y,14);
				}
				if(inBounds(x-1,y+1) && getTileType(map,x-1,y+1) != 2)
				{
					if(getID(map,x-1,y+1)!=-1 && getID(map,x-1,y+1)!=id)
					{
						int victim=getID(map,x-1,y+1);
						setHP(victim,getHP(victim)-magicDamage(id));
						makeEffect(map,x-1,y+1,10);
					}
					else
					makeEffect(map,x-1,y+1,14);
				}
				break;
			case 3:
				if(inBounds(x+1,y-1) && getTileType(map,x+1,y-1) != 2)
				{
					if(getID(map,x+1,y-1)!=-1 && getID(map,x+1,y-1)!=id)
					{
						int victim=getID(map,x+1,y-1);
						setHP(victim,getHP(victim)-magicDamage(id));
						makeEffect(map,x+1,y-1,10);
					}
					else
					makeEffect(map,x+1,y-1,14);
				}
				if(inBounds(x+1,y) && getTileType(map,x+1,y) != 2)
				{
					if(getID(map,x+1,y)!=-1 && getID(map,x+1,y)!=id)
					{
						int victim=getID(map,x+1,y);
						setHP(victim,getHP(victim)-magicDamage(id));
						makeEffect(map,x+1,y,10);
					}
					else
					makeEffect(map,x+1,y,14);
				}
				if(inBounds(x+1,y+1) && getTileType(map,x+1,y+1) != 2)
				{
					if(getID(map,x+1,y+1)!=-1 && getID(map,x+1,y+1)!=id)
					{
						int victim=getID(map,x+1,y+1);
						setHP(victim,getHP(victim)-magicDamage(id));
						makeEffect(map,x+1,y+1,10);
					}
					else
					makeEffect(map,x+1,y+1,14);
				}
				break;
		}
	}
}