#include "combat.h"

//basic NPC ai script.

bool faceEdge(unsigned char x, unsigned char y, unsigned char dir)
{
	return ((y == 0 && dir == DIR_UP) || (y == 14 && dir == DIR_DOWN) || (x == 0 && dir == DIR_LEFT) || (x == 19 && dir == DIR_RIGHT));
}

long facePlayer(long map, unsigned char x, unsigned char y, unsigned char dir)
{
	switch(dir)
	{
		case DIR_UP:
			y--;
			break;
		case DIR_DOWN:
			y++;
			break;
		case DIR_LEFT:
			x--;
			break;
		case DIR_RIGHT:
			x++;
			break;
	}
	
	//I'm going to start utilizing some of these scripts as teaching tools for scripterss; since they are to increase the flexibility and power of scripting in ML in any case.
	//This statement utilizes what is known as Short Circuit Evaluation. Since the boolean && requires both of the statements to be true,
	//If the first statement is false then the second won't be evaluated. It's possible that getting the player type of -1 WOULD crash the server,
	//But Short Circuit Evaluation prevents a -1 from being evaluated by getPlayerType.
	//By the way this returns the players id if there is a human player in front of the specified map,x,y coordinates.
	if(getID(map,x,y) != -1 && getPlayerType(getID(map,x,y)) == PLAYER_TYPE_PC && getAccess(getID(map,x,y)) > 0)
	{
		return getID(map,x,y);
	}
	return -1;
}

void main()
{
	long id = getPlayer();
	cPlayer *player=playerStruct(id);
	cPlayer *target;
	long mapid = player->map;
	cMap *map  = mapStruct(mapid);
	int willAttack=1,dir=-1;
	if(player->state==STANDING)
	{
			dir=-2;
	}
	else if(player->state==ATTACK)
	{
		if(player->target == -1) //find a target
		{
			player->target = npc_find_player(id);
		}
	}
	else if(player->state==PASSIVE || player->state==MERCHANT)
	{
		dir=rand()%4;
	}
	if(player->target > -1)//home in
	{
		target = playerStruct(player->target);
		long dx=target->x-player->x;
		long dy=target->y-player->y;

		if(dy<0&&dx>=dy&&dx<=-dy)
			dir=1;
		else if(dy>0&&dx<=dy&&dx>=-dy)
			dir=0;
		else if(dx<0&&dy>=dx&&dy<=-dx)
			dir=2;
		else if(dx>0&&dy<=dx&&dy>=-dx)
			dir=3;
		//face victim
		if(abs(dx)+abs(dy)==1)
			willAttack=0;
		else
		{
			//wall evasion
			if(dir==0 && !move_check(id,DIR_DOWN))
				dir=rand()%2+2;
			else if(dir==1 && !move_check(id,DIR_UP))
				dir=rand()%2+2;
			else if(dir==2 && !move_check(id,DIR_LEFT))
				dir=rand()%2;
			else if(dir==3 && !move_check(id,DIR_RIGHT))
				dir=rand()%2;
		}
		//lost target?
		int sight=int(player->range*0.75f);
		if(dx>sight || dy>sight || player->map != target->map || target->type==PLAYER_TYPE_NPC)
			player->target=-1;
	}
	if(willAttack)
	{
		long nmoved=0,rnd,tries=0;
		if(dir==-1)
			rnd=1;
		else
			rnd=0;
		if(rnd)
			dir=rand()%4;
		while(nmoved==0 && tries!=4)
		{
			if(dir==0 && move_check(id,DIR_DOWN)== 1)
			{
				npc_move(id,dir);
				
				nmoved=1;
			}
			else if(dir==1&&move_check(id,DIR_UP) == 1)
			{
				npc_move(id,dir);
				
				nmoved=1;
			}
			else if(dir==2&&move_check(id,DIR_LEFT) == 1)
			{
				npc_move(id,dir);
				
				nmoved=1;
			}
			else if(dir==3&&move_check(id,DIR_RIGHT) == 1)
			{
				npc_move(id,dir);
				
				nmoved=1;
			}
			dir++;
			if(dir>3)
				dir=0;
			tries++;
		}
		//check for script trigger
		if(map->map[player->y][player->x].type==TILE_TYPE_SCRIPT)
		{
			runScript(map->map[player->y][player->x].warp.map,id);
		}
	}
	else 
		player->dir=dir;
	if(!faceEdge(player->x, player->y, player->dir) && player->target>-1)
	{
		long victim = facePlayer(player->map, player->x, player->y, player->dir);
		if(victim != -1)
		{
			target = playerStruct(victim);
			long dmg=wouldAttack(id,victim);
			if(dmg==0)
				dmg=rand()%2;
			else if(rand()%2 && missBonus(target->dex))
				dmg=0;
			
			target->time_safe=0;
			
			setHP(victim,target->hp - dmg);
			target->target=id;
			
			//send blood/miss effect out
			if(dmg>0)
				makeEffect(target->map,target->x,target->y,0);
			else
				makeEffect(target->map,target->x,target->y,4);
		}
	}
}