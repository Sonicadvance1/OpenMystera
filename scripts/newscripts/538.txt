#include"mapping.h"
void addrandomtree()
{
	int randmap=getRand(1200);
	int x;
	int y;
	while(x<1||x>18)
		x=getRand(19);
	while(y<1||y>14)
		y=getRand(14);
	cMap *map=mapStruct(randmap);
	if(map->map[y][x].tile[1]==SMALL_TREE)
	{
		map->map[y][x].tile[1]=0;
		map->map[y][x].type=TILE_TYPE_NONE;
		if(map->map[y][x].tile[1]==0)
			maketree(map,x,y);
		savemap(randmap);
		printf("Large tree grown at %d %d %d\n",randmap,x,y);
	}
	else if(map->map[y][x].tile[1]==LARGETREE_BR||map->map[y][x].tile[1]==LARGETREE_BL || map->map[y][x].tile[3]==LARGETREE_TR||map->map[y][x].tile[3]==LARGETREE_BL)
	{
		int distance=getRand(5)+1;
		for(int i=0;i<distance;i++)
		{
			int dir=getRand(4);
			if(dir==DIR_UP&& y-1>0)
			{
				if(map->map[y-1][x].type==TILE_TYPE_NONE)
					y--;
			}
			else if(dir==DIR_DOWN&& y+1<14)
			{
				if(map->map[y+1][x].type==TILE_TYPE_NONE)
					y++;
			}
			else if(dir==DIR_LEFT&& x-1>0)
			{
				if(map->map[y][x-1].type==TILE_TYPE_NONE)
					x--;
			}
			else if(dir==DIR_RIGHT&& x+1<19)
			{
				if(map->map[y][x+1].type==TILE_TYPE_NONE)
					x++;
			}
		}
		if(map->map[y][x].type==TILE_TYPE_NONE&&map->map[y][x].tile[1]==0)
		{
			map->map[y][x].tile[1]=SMALL_TREE;
			map->map[y][x].type=TILE_TYPE_SWITCH;
			map->map[y][x].warp.map=5;
			savemap(randmap);
			printf("Seeded tree grown at %d %d %d\n",randmap,x,y);
		}
	}
	else if(getRand(600)==1)
	{
		if(map->map[y][x].type==TILE_TYPE_NONE&&map->map[y][x].tile[1]==0)
		{
			map->map[y][x].tile[1]=SMALL_TREE;
			map->map[y][x].type=TILE_TYPE_SWITCH;
			map->map[y][x].warp.map=5;
			savemap(randmap);
			printf("New tree grown at %d %d %d\n",randmap,x,y);
		}
	}
}

void main()
{
	addrandomtree();
	runScript(myScript(),300);
}