/*
	Underworld Merchant chat script
	Written by Yotendoten
	August 8, 2004
*/

#include <string.h>

const int MAX_STRING_SIZE = 256;

void main()
{
	int MerchantID;
	int MapID;
	int PlayerID;
	char* pRequest;
	int i;
	int InvSize;
	int SellItemID;
	int SellQuantity;
	int BuyItemID;
	int BuyQuantity;
	char pTemp[MAX_STRING_SIZE];
	int TradeID;

	MerchantID = getPlayer();
	
	PlayerID = getChatPlayer();
	pRequest = stringLower(getChat());
	InvSize = inventoryLen();
	cItem *pItem;
	cItem *pPrice;
	cPlayer *pMerchant = playerStruct(MerchantID);
	MapID = pMerchant->map;
	cPlayer *pPlayer = playerStruct(PlayerID);

	if (strncmp(stringLower(pRequest), "list", 4) == 0)	
	{
		sendMapChatf(MapID, "%s:Hello %s! Welcome to the Underworld. What can I do for you today?...", pMerchant->name, pPlayer->name);

		for (i = 0; i < InvSize; i += 2)
		{
			SellItemID = inventoryItem(MerchantID, i);
			if(SellItemID == -1)
				continue;
			pItem = itemStruct(SellItemID);
			SellQuantity = pItem->qty;

			BuyItemID = inventoryItem(MerchantID, i+1);
			if(BuyItemID == -1)
				continue;
			pPrice = itemStruct(BuyItemID);
			BuyQuantity = pPrice->qty;

			if (SellQuantity == 0)
				continue;

			TradeID = (i / 2) + 1;
			strcpy(pTemp, pItem->name);
		
			if(SellQuantity < 0)
			{
				if (BuyQuantity < 0)
					sendChatf(PlayerID, "^y%d) %s^y for %s", TradeID, pTemp, pPrice->name);
				else
					sendChatf(PlayerID, "^y%d) %s^y for %s[%d]", TradeID, pTemp, pPrice->name, BuyQuantity);
			}
			else
			{
				if (BuyQuantity < 0)
					sendChatf(PlayerID, "^y%d) %s[%d]^y for %s", TradeID, pTemp, SellQuantity, pPrice->name);
				else
					sendChatf(PlayerID, "^y%d) %s[%d]^y for %s[%d]", TradeID, pTemp, SellQuantity, pPrice->name, BuyQuantity);
			}
		}
	}
	else if (strncmp(pRequest, "trade", 5) == 0)
	{
		TradeID = stoi(pRequest + 6);
		i = (TradeID - 1) * 2;

		// Check TradeID
		if (i < 0 || i > InvSize)
			{
			sendMapChatf(MapID, "%s:%s, I don't understand what you're asking for...", getName(MerchantID), getName(PlayerID));
			return;
			}

		SellItemID = inventoryItem(MerchantID, i);
		if(SellItemID == -1)
			return;
		pItem = itemStruct(SellItemID);
		SellQuantity = pItem->qty;
		BuyItemID = inventoryItem(MerchantID, i+1);
		if(BuyItemID == -1)
			return;
		pPrice = itemStruct(BuyItemID);
		BuyQuantity = pPrice->qty;

		// Check TradeID
		if (SellQuantity == 0)
			{
			sendMapChatf(MapID, "%s:%s, I don't understand what you're asking for...", getName(MerchantID), getName(PlayerID));
			return;
			}

		// Find item that merchant is buying from player in player's inventory
		for (i = 0; i < InvSize; i++)
			{
			if (itemAt(PlayerID, i) == pPrice->item_template)
				break;			
			}

		// Player doesn't have the item to trade
		if (i == InvSize)
			{
			sendMapChatf(MapID, "%s:%s, you don't have %s", getName(MerchantID), getName(PlayerID), pPrice->name);
			return;
			}
		int invItem = pPlayer->inventory[i];
		cItem *costed = itemStruct(invItem);

		// Player doesn't have enough of the item to trade
		if (BuyQuantity > costed->qty)
			{
			sendMapChatf(MapID, "%s:%s, you don't have enough %s", getName(MerchantID), getName(PlayerID), pPrice->name);
			return;
			}

		// Make sure player has room in their inventory
		if (!giveItem(PlayerID, pItem->item_template, (SellQuantity < 0 ? -1 : SellQuantity)))
			{
			sendMapChatf(MapID, "%s:%s, you can't carry %s", getName(MerchantID), getName(PlayerID), pItem->name);
			return;
			}

		if(BuyQuantity<0)
		{
			sendInventoryQty(PlayerID,i,0);
			costed->qty=0;
			itemDelete(invItem);
			pPlayer->inventory[i]=-1;
		}
		else
		{
			costed->qty -= BuyQuantity;
			sendInventoryQty(PlayerID,i,costed->qty);
			if(costed->qty==0)
			{
				itemDelete(invItem);
				pPlayer->inventory[i]=-1;
			}
			else
				itemSave(invItem);
		}
		sendMapChatf(MapID, "%s:Thank you %s! Here is your %s", getName(MerchantID), getName(PlayerID), pItem->name);
	}
}
