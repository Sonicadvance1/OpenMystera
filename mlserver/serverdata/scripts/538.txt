#include"mapping.h"
void addrandomtree()
{
	long rand_map=getRand(TOTALMAPS/2);
	rand_map += STARTMAP;
	long x;
	long y;
	long temp_x;
	long temp_y;
	x=getRand(18) + 1;
	y=getRand(13) + 1;
	
	cMap *map=mapStruct(rand_map);
	cMap *temp_map;
	if(map->map[y][x].tile[1]==SMALL_TREE)
	{
		if(map->map[y][x].tile[1]==0)
			maketree(map,x,y);
		savemap(rand_map);
		printf("Large tree grown at %d %d %d\n",rand_map,x,y);
	}
	else if(map->map[y][x].tile[1]==LARGETREE_BR||map->map[y][x].tile[1]==LARGETREE_BL || map->map[y][x].tile[3]==LARGETREE_TR||map->map[y][x].tile[3]==LARGETREE_BL)
	{
		long distance=getRand(5)+2;
		for(long i=0;i<distance;i++)
		{
			long dir=getRand(4);
			if(dir==DIR_UP)
			{
				if(y - 1 < 0)
				{
					temp_y = 14;
					temp_map = mapStruct(map->n);
					if(temp_map->map[temp_y][x].type == TILE_TYPE_NONE)
					{
						y = temp_y;
						map = temp_map;
						rand_map = map->n;
					}
				}
				else if(map->map[y-1][x].type==TILE_TYPE_NONE)
					y--;
			}
			else if(dir==DIR_DOWN)
			{
				if(y + 1 > 14)
				{
					temp_y = 0;
					temp_map = mapStruct(map->s);
					if(temp_map->map[temp_y][x].type == TILE_TYPE_NONE)
					{
						y = temp_y;
						map = temp_map;
						rand_map = map->s;
					}
				}
				else if(map->map[y+1][x].type==TILE_TYPE_NONE)
					y++;
			}
			else if(dir==DIR_LEFT)
			{
				if(x - 1 < 0)
				{
					temp_x = 19;
					temp_map = mapStruct(map->w);
					if(temp_map->map[y][temp_x].type == TILE_TYPE_NONE)
					{
						x = temp_x;
						map = temp_map;
						rand_map = map->w;
					}
				}
				else if(map->map[y][x-1].type==TILE_TYPE_NONE)
					x--;
			}
			else if(dir==DIR_RIGHT)
			{
				if(x + 1 > 19)
				{
					temp_x = 0;
					temp_map = mapStruct(map->e);
					if(temp_map->map[y][temp_x].type == TILE_TYPE_NONE)
					{
						x = temp_x;
						map = temp_map;
						rand_map = map->e;
					}
				}
				else if(map->map[y][x+1].type==TILE_TYPE_NONE)
					x++;
			}
		}
		if(map->map[y][x].type==TILE_TYPE_NONE&&map->map[y][x].tile[1]==0)
		{
			map->map[y][x].tile[1]=SMALL_TREE;
			map->map[y][x].type=TILE_TYPE_SWITCH;
			map->map[y][x].warp.map=TREESCRIPT;
			savemap(rand_map);
			printf("Seeded tree grown at %d %d %d\n",rand_map,x,y);
		}
	}
	else if(getRand(600)==1)
	{
		if(map->map[y][x].type==TILE_TYPE_NONE&&map->map[y][x].tile[1]==0)
		{
			map->map[y][x].tile[1]=SMALL_TREE;
			map->map[y][x].type=TILE_TYPE_SWITCH;
			map->map[y][x].warp.map=TREESCRIPT;
			savemap(rand_map);
			printf("New tree grown at %d %d %d\n",rand_map,x,y);
		}
	}
}

void main()
{
	addrandomtree();
	runScript(myScript(),500);
}